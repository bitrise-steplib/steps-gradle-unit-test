format_version: "20"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

workflows:
  ci:
    before_run:
    - check
    after_run:
    - test
    - test-no-root-buildfile
    - test-gradle-kts

  check:
    steps:
    - git::https://github.com/bitrise-steplib/steps-check.git: { }

  test:
    description: Test with all inputs defined
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-android-sdk22.git
    - GRADLE_BUILD_FILE_PATH: ./build.gradle
    - GRADLEW_PATH: ./gradlew
    - BRANCH: master
    after_run:
    - _common

  test-no-root-buildfile:
    description: Test without GRADLE_BUILD_FILE_PATH
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/android-empty-library.git
    - GRADLE_BUILD_FILE_PATH: ""
    - GRADLEW_PATH: ./gradlew
    - BRANCH: master
    after_run:
    - _common

  test-gradle-kts:
    description: Test Gradle Kotlin DSL support
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/android-gradle-kotlin-dsl.git
    - GRADLE_BUILD_FILE_PATH: ./build.gradle.kts
    - GRADLEW_PATH: ./gradlew
    - BRANCH: master
    after_run:
    - _common

  # ----------------------------------------------------------------
  # --- workflow to Step Test
  _common:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            rm -rf ./_tmp
    - change-workdir:
        title: Switch working dir to test / _tmp dir
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            if [[ -z "${SAMPLE_APP_URL}" ]]; then
              echo "error: there is no SAMPLE_APP_URL env var specified"
              exit 1
            elif [[ -z "${COMMIT}" && -z "${BRANCH}" ]]; then
              echo "error: can't checkout: there is no BRANCH or COMMIT env var specified"
              exit 1
            fi
            git init
            git remote add origin "${SAMPLE_APP_URL}"
            git fetch || exit 1
            [[ -n "${COMMIT}" ]] && git checkout "${COMMIT}" || git checkout "${BRANCH}"
    - path::./:
    - script:
        title: Output test
        is_always_run: true
        inputs:
        - content: |-
            echo "BITRISE_GRADLE_TEST_RESULT: $BITRISE_GRADLE_TEST_RESULT"
